// backend/server.js
const express = require("express");
const path = require("path");
const fs = require("fs");
const app = express(); 
const PORT = process.env.PORT || 3000;
// public dentro de backend/ 
const publicDir = path.join(__dirname, "public"); 
app.use(express.static(publicDir)); 
// Helper: cargar posts 
function loadPosts() { const dataPath = path.join(__dirname, "..", "data", "posts.json"); 
        // si data est√° en la ra√≠z // Si data est√° dentro de backend/
                      data cambia a: path.join(__dirname, "data", "posts.json") if (!fs.existsSync(dataPath)) return []; const raw = fs.readFileSync(dataPath, "utf8"); return JSON.parse(raw); } // Reemplaza tu handler app.get('/blog', ...) por este app.get("/blog", (req, res) => { const posts = loadPosts(); // tu funci√≥n que lee data/posts.json // ordena por fecha descendente posts.sort((a,b) => new Date(b.date) - new Date(a.date)); // genera la lista de tags √∫nica const tagSet = new Set(); posts.forEach(p => (p.tags || []).forEach(t => tagSet.add(t))); const tags = Array.from(tagSet); const html = <!doctype html> <html lang="es"> <head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width,initial-scale=1"> <title>Blog ‚Äî Agente Astrol√≥gico</title> <meta name="description" content="Art√≠culos Jyotish y astrolog√≠a pr√°ctica."> <link rel="preload" href="/styles-blog.css" as="style"> <link rel="stylesheet" href="/styles-blog.css"> </head> <body> <header class="blog-header"> <div class="container"> <h1>Blog ‚Äî Agente Astrol√≥gico</h1> <p class="lead">Art√≠culos Jyotish sobre cada signo y tr√°nsitos astrol√≥gicos.</p> </div> </header> <main class="container"> <section class="controls"> <input id="searchInput" placeholder="Buscar por t√≠tulo o palabra clave..." /> <div class="tags"> <button class="tag active" data-tag="all">Todos</button> ${tags.map(t => <button class="tag" data-tag="${t}">${t}</button>).join("\n")} </div> </section> <section id="postsGrid" class="grid"> ${posts.map(p => <article class="card" data-tags='${JSON.stringify(p.tags||[])}' data-title="${(p.title||'').toLowerCase()}"> <a class="card-link" href="/blog/${p.id}"> <div class="card-media" style="background-image:url('${p.coverImage || '/images/default-cover.jpg'}')"></div> <div class="card-body"> <h3>${p.title}</h3> <p class="meta">${new Date(p.date).toLocaleDateString()} ‚Ä¢ ${ (p.readingMinutes || Math.max(1, Math.round((p.content||'').replace(/<[^>]+>/g,'').split(' ').length / 200))) } min</p> <p class="excerpt">${p.excerpt}</p> <div class="card-tags">${(p.tags||[]).map(t=><span class="pill">${t}</span>).join(' ')}</div> </div> </a> </article> ).join("\n")} </section> <nav class="pagination" id="pagination"></nav> </main> <footer class="site-footer"> <div class="container">¬© ${new Date().getFullYear()} Agente Astrol√≥gico</div> </footer> <script> // Client-side behavior: search, tag filter, simple pagination (function(){ const postsPerPage = 6; const allCards = Array.from(document.querySelectorAll('#postsGrid .card')); const searchInput = document.getElementById('searchInput'); const tagButtons = Array.from(document.querySelectorAll('.tag')); const paginationEl = document.getElementById('pagination'); let activeTag = 'all'; let query = ''; function matches(card, q, tag) { const title = card.dataset.title || ''; const tags = JSON.parse(card.dataset.tags || '[]'); const titleMatch = title.includes(q); const contentMatch = (card.querySelector('.excerpt')?.textContent || '').toLowerCase().includes(q); const tagMatch = tag === 'all' ? true : tags.includes(tag); return (titleMatch || contentMatch) && tagMatch; } function render(page=1) { const filtered = allCards.filter(c => matches(c, query, activeTag)); // pagination const total = filtered.length; const pages = Math.max(1, Math.ceil(total / postsPerPage)); const start = (page-1)*postsPerPage; const end = start + postsPerPage; allCards.forEach(c => c.style.display = 'none'); filtered.slice(start, end).forEach(c => c.style.display = ''); // render pagination paginationEl.innerHTML = ''; if (pages > 1) { for (let i=1;i<=pages;i++){ const btn = document.createElement('button'); btn.textContent = i; if (i===page) btn.classList.add('active'); btn.addEventListener('click', ()=> render(i)); paginationEl.appendChild(btn); } } } // events searchInput.addEventListener('input', (e)=> { query = e.target.value.toLowerCase().trim(); render(1); }); tagButtons.forEach(b=>{ b.addEventListener('click', ()=> { tagButtons.forEach(x=>x.classList.remove('active')); b.classList.add('active'); activeTag = b.dataset.tag; render(1); }); }); // initial render render(1); })(); </script> </body> </html>; res.send(html); }); // Ruta din√°mica del post (/blog/:id) app.get("/blog/:id", (req, res) => { const id = req.params.id.toLowerCase(); const posts = loadPosts(); const post = posts.find(p => p.id === id); if (!post) { return res.status(404).send("<h2>Post no encontrado</h2><p><a href='/blog'>Volver al blog</a></p>"); } // dentro de app.get('/blog/:id', ...) const html = <!doctype html> <html lang="es"> <head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width,initial-scale=1"> <title>${post.title} ‚Äî Agente Astrol√≥gico</title> <meta name="description" content="${post.excerpt || ''}"> <link rel="stylesheet" href="/styles-post.css"> </head> <body> <div class="page"> <header class="post-header"> <div class="brand-compact"> <div class="logo">A</div> <div> <div style="font-weight:800">${post.author || 'Agente Astrol√≥gico'}</div> <div class="post-meta">${new Date(post.date).toLocaleDateString()} ‚Ä¢ ${post.readingMinutes || ''} min</div> </div> </div> <div style="margin-left:auto"> <a href="/blog" class="tag-pill" style="text-decoration:none">‚Üê Volver al blog</a> </div> </header> <div class="post-card"> <div class="article-col"> <div class="post-cover" style="background-image:url('${post.coverImage || '/images/default-cover.jpg'}')"></div> <div class="row-meta"> ${(post.tags||[]).map(t=><span class="tag-pill">${t}</span>).join(' ')} </div> <article class="article-body"> <h1>${post.title}</h1> <div class="article-content"> ${post.content} </div> <div class="post-cta"> <button class="btn" onclick="window.location.href='/contacto'">Pedir lectura</button> <button class="ghost" id="copyUrlBtn">Copiar URL</button> </div> </article> </div> <aside class="aside"> <div class="card"> <div style="font-weight:800">Sobre este tr√°nsito</div> <p class="box" style="margin-top:10px">${post.excerpt}</p> <div class="toc"> <!-- TOC generado desde el contenido (opcional) --> <div style="font-weight:700;margin-top:10px">Contenido</div> <a href="#fechas">Fechas clave</a> <a href="#esencia">Esencia</a> <a href="#fortalezas">Fortalezas</a> <a href="#aprovechar">C√≥mo aprovecharlo</a> </div> <div style="margin-top:12px"> <div style="font-weight:700">Compartir</div> <div class="share-btn"> <button onclick="window.open('https://www.facebook.com/sharer/sharer.php?u='+encodeURIComponent(location.href),'_blank')">Facebook</button> <button onclick="window.open('https://twitter.com/intent/tweet?text='+encodeURIComponent(document.title+' '+location.href),'_blank')">Twitter</button> <button onclick="window.open('mailto:?subject='+encodeURIComponent(document.title)+'&body='+encodeURIComponent(location.href))">Email</button> </div> </div> </div> </aside> </div> <footer style="margin-top:18px;color:var(--muted);display:flex;justify-content:space-between"> <div>¬© ${new Date().getFullYear()} Agente Astrol√≥gico</div> <div style="color:var(--muted)">¬øQuieres una lectura personalizada? <a href="/contacto" style="color:var(--accent)">Pide una sesi√≥n</a></div> </footer> </div> <script src="/post.js"></script> </body> </html>; res.send(html); }); // Mantener otras rutas existentes (ping, api, etc.) si las tienes app.get("/ping", (req, res) => res.json({ message: "pong üèì", status: "ok" })); app.listen(PORT, () =>
